<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:tast="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--组件扫描-->
    <!--配置dubbo的配置项-->
    <dubbo:application name="pinyougou-seckill">
        <dubbo:parameter key="qos.port" value="34578"></dubbo:parameter>
    </dubbo:application>

    <dubbo:registry protocol="zookeeper" address="192.168.25.133" port="2181"></dubbo:registry>
    <!--增加暴露服务的端口-->
    <dubbo:protocol name="dubbo" port="20888"></dubbo:protocol>

    <dubbo:annotation package="com.pinyougou.seckill.service"></dubbo:annotation>

    <dubbo:provider timeout="1000000"></dubbo:provider>

    <bean id="idWorker" class="com.pinyougou.common.util.IdWorker">
        <!-- 进程ID -->
        <constructor-arg index="0" value="0"></constructor-arg>
        <!-- 数据中心ID -->
        <constructor-arg index="1" value="0"></constructor-arg>
    </bean>

    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer" id="freeMarkerConfigurer">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="templateLoaderPath" value="/WEB-INF/ftl"></property>
    </bean>

    <bean class="com.pinyougou.common.util.IdWorker">
        <constructor-arg name="workerId" value="0"></constructor-arg>
        <constructor-arg name="datacenterId" value="0"></constructor-arg>
    </bean>

    <!--任务驱动 使用任务执行管理器-->
    <tast:annotation-driven executor="taskExecutor"></tast:annotation-driven>

    <!--线程池-->
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" id="taskExecutor">
        <!--初始线程数量-->
        <property name="corePoolSize" value="10"></property>
        <!--最大线程数量-->
        <property name="maxPoolSize" value="100"></property>
        <!--队列的最大容量-->
        <property name="queueCapacity" value="200"></property>
        <!--线程的最大空闲时间 秒-->
        <property name="keepAliveSeconds" value="300"></property>

        <!--设置拒绝策略-->
        <property name="rejectedExecutionHandler">
            <!--该策略指定如果线程不足，由创建线程池的系统来进行处理-->
            <bean class="java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy"></bean>
        </property>
    </bean>

    <!--交给spring容器-->
    <bean class="com.pinyougou.seckill.thread.CreateOrderThread"></bean>
</beans>